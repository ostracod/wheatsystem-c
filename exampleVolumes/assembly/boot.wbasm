
FUNC isPrime
    
    ARG isPrime, s8
    ARG number, s32
    VAR factor, s32
    VAR condition, s32
    
    wrt isPrime, 1
    wrt factor, 2
    LBL checkFactorLoop
    
    gre condition, number, factor
    jmpNZ retSkip, condition
    ret
    LBL retSkip
    mod condition, number, factor
    jmpNZ registerCompositeSkip, condition
    wrt isPrime, 0
    ret
    LBL registerCompositeSkip
    
    add factor, factor, 1
    jmp checkFactorLoop
END

FUNC init, init_ID
    
    VAR number, s32
    
    wrt number, 2
    LBL loop
    
    newArgFrame 5
    wrt nextArgFrame[1]:s32, number
    call isPrime
    
    # TODO: Print the number if prime.
    
    add number, number, 1
    jmp loop
END


